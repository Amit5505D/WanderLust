<% layout("/layouts/boilerplate") %>

<script>
  const mapToken = "<%= process.env.MAP_TOKEN %>";
  const coordinates = "<%- JSON.stringify( listing.geometry.coordinates) %>";

</script>

  

<div class="row">
  <div class="col-12 col-md-8 offset-md-2">

    <h3 class="mb-4 text-center"><%= listing.title %></h3>

    <div class="card shadow rounded mb-5" listing-card>
      <!-- Image -->
      <img src="<%= listing.image.url %>" class="card-img-top" alt="listing_image" style="height: 300px; object-fit: cover;">

      <!-- Card Body -->
      <div class="card-body">
        <h4 class="card-title mb-4"><%= listing.title %></h4>

        <p class="card-text"><strong>Description:</strong> <%= listing.description %></p>

        <p class="card-text">
          <strong>Price:</strong>
          <% if (listing.price) { %>
            ₹<%= Number(listing.price).toLocaleString("en-IN") %>
          <% } else { %>
            <span class="text-muted">Price not available</span>
          <% } %>
        </p>

        <p class="card-text"><strong>Location:</strong> <%= listing.location %></p>
        <p class="card-text"><strong>Country:</strong> <%= listing.country %></p>
        <p class="card-text">
          <strong>Listed by:</strong>
          <% if (listing.owner && listing.owner.username) { %>
            <%= listing.owner.username %>
          <% } else { %>
            <span class="text-muted">Unknown</span>
          <% } %>
        </p>

        <!-- Responsive Buttons -->
        
        <div class="mt-4 d-flex flex-wrap gap-2">
          <a href="/listings/<%= listing._id %>/edit" class="btn btn-primary flex-grow-1 flex-md-grow-0">Edit</a>
          <form action="/listings/<%= listing._id %>?_method=DELETE" method="POST" class="d-inline flex-grow-1 flex-md-grow-0">
            <button type="submit" class="btn btn-danger w-100 w-md-auto">Delete</button>
          </form>
        </div>
        
      </div>
    </div>

    <!-- Review Form -->
    <% if (currentUser) { %>
    <div class="card shadow rounded mb-5">
      <div class="card-body">
        <h4>Leave a review</h4>
        <form action="/listings/<%= listing._id %>/reviews" method="POST" novalidate class="needs-validation">
          <div class="mb-3">
            <label for="rating" class="form-label">Rating</label>
            <div class="star-rating">
              <input type="radio" name="review[rating]" id="star5" value="5" required>
              <label for="star5" class="star">★</label>
              <input type="radio" name="review[rating]" id="star4" value="4">
              <label for="star4" class="star">★</label>
              <input type="radio" name="review[rating]" id="star3" value="3">
              <label for="star3" class="star">★</label>
              <input type="radio" name="review[rating]" id="star2" value="2">
              <label for="star2" class="star">★</label>
              <input type="radio" name="review[rating]" id="star1" value="1">
              <label for="star1" class="star">★</label>
            </div>
            <div class="rating-text">
              <span id="rating-text">Select a rating</span>
            </div>
          </div>
          <div class="mb-3">
            <label for="comment" class="form-label">Comment</label>
            <textarea name="review[comment]" id="comment" class="form-control" rows="5" cols="30" required></textarea>
            <div class="invalid-feedback">Please enter a comment.</div>
          </div>
          <button type="submit" class="btn btn-primary">Submit</button>
        </form>
      </div>
    </div>
    <% } %>

    <!-- Reviews Section -->
    <div class="row">
      <div class="col-12">
        <div class="card shadow rounded mb-5">
          <div class="card-body">
            <h4>Reviews</h4>
            <p class="text-muted"><%= listing.reviews.length %> reviews</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Individual Review Cards in Grid -->
    <div class="row">
      <% if (listing.reviews && listing.reviews.length > 0) { %>
        <% for(let review of listing.reviews) { %>
          <div class="col-6 mb-4">
            <div class="card h-100 shadow-sm">
              <div class="card-body">
                <h5 class="card-title">
                  <% if (review.author && review.author.username) { %>
                    <%= review.author.username %>
                  <% } else { %>
                    Anonymous User
                  <% } %>
                </h5>
                <p class="card-text"><%= review.comment %></p>
                <p class="card-text">
                  <strong>Rating:</strong> 
                  <div class="review-stars">
                    <% for(let i = 0; i < review.rating; i++) { %>
                      <span class="star">★</span>
                    <% } %>
                    <% for(let i = review.rating; i < 5; i++) { %>
                      <span class="star empty">☆</span>
                    <% } %>
                    <span class="ms-2 text-muted">(<%= review.rating %>/5)</span>
                  </div>
                </p>
                <p class="card-text">
                  <small class="text-muted">
                    Posted on <%= new Date(review.createdAt).toLocaleDateString() %>
                  </small>
                </p>
                <!-- Delete Review Button -->
                <div class="mt-3">
                  <form action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE" method="POST" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Are you sure you want to delete this review?')">
                      Delete Review
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        <% } %>
      <% } else { %>
        <div class="col-12">
          <div class="card shadow rounded">
            <div class="card-body text-center">
              <p class="text-muted">No reviews yet. Be the first to review!</p>
            </div>
          </div>
        </div>
      <% } %>
    </div>
    
    </div>
    <div class="col-6 offset-3 mb-3">
      <h3>Where you'll be</h3>
      <div id="map"></div>
      
  </div>
</div>
<script>
    console.log('Starting map initialization...');
    console.log('Mapbox token:', '<%= mapToken %>');
    console.log('mapboxgl available:', typeof mapboxgl);
    
    try {
        if (typeof mapboxgl === 'undefined') {
            console.error('Mapbox GL JS library is not loaded!');
        } else {
            mapboxgl.accessToken = '<%= mapToken %>';
            console.log('Access token set');
            
            const map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v11',
                center: [-74.5, 40],
                zoom: 9
            });
            
            console.log('Map object created:', map);
            
            map.on('load', function() {
                console.log('Map loaded successfully!');
            });
            
            map.on('error', function(e) {
                console.error('Map error:', e);
            });
        }
    } catch (error) {
        console.error('Error during map creation:', error);
    }
    const marker = new mapboxgl.Marker()
        .setLngLat([-74.5, 40])
        .addTo(map);
</script>

<script>
// Interactive Star Rating
document.addEventListener('DOMContentLoaded', function() {
    const stars = document.querySelectorAll('.star-rating input[type="radio"]');
    const ratingText = document.getElementById('rating-text');
    
    const ratingTexts = {
        1: 'Poor',
        2: 'Fair', 
        3: 'Good',
        4: 'Very Good',
        5: 'Excellent'
    };
    
    stars.forEach(star => {
        star.addEventListener('change', function() {
            const rating = this.value;
            ratingText.textContent = ratingTexts[rating];
            ratingText.style.color = '#ffc107';
        });
        
        star.addEventListener('mouseenter', function() {
            const rating = this.value;
            ratingText.textContent = ratingTexts[rating];
            ratingText.style.color = '#ffc107';
        });
    });
    
    // Reset text when mouse leaves the rating area
    document.querySelector('.star-rating').addEventListener('mouseleave', function() {
        const checkedStar = document.querySelector('.star-rating input[type="radio"]:checked');
        if (checkedStar) {
            ratingText.textContent = ratingTexts[checkedStar.value];
        } else {
            ratingText.textContent = 'Select a rating';
            ratingText.style.color = '#666';
        }
    });
});
</script>
